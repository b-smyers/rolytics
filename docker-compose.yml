services:
  nginx:
    container_name: proxy
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - type: bind
        source: ./nginx/configs/rolytics.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: false
      - type: bind
        source: ./nginx/html
        target: /var/www/html
        read_only: true
      - type: bind
        source: /etc/letsencrypt/
        target: /etc/letsencrypt/
        read_only: false
    depends_on:
      - api
      - ui
    networks:
      - proxy_network

  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
      target: api
      network: host
    environment:
      - NODE_ENV=production
      - HTTP_PORT=5000
    ports:
      - 5000:5000
    volumes:
      - type: bind
        source: ./packages/api/database.db
        target: /app/packages/api/database.db
    networks:
      - proxy_network

  ui:
    container_name: ui
    build:
      context: .
      dockerfile: Dockerfile
      target: ui
      network: host
    environment:
      - NODE_ENV=production
    ports:
      - 3000:3000
    depends_on:
      - api
    networks:
      - proxy_network

# Allows containers to talk to each other
networks:
  proxy_network:
    driver: bridge