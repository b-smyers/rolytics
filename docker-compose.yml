services:
  nginx:
    container_name: proxy
    image: bsmyers/proxy:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - type: bind
        source: ./packages/proxy/configs/rolytics.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: false
      - type: bind
        source: ./packages/proxy/html
        target: /var/www/html
        read_only: true
      - type: bind
        source: /etc/letsencrypt/
        target: /etc/letsencrypt/
        read_only: false
    depends_on:
      - api
      - ui
    restart: always
    networks:
      - proxy_network

  api:
    container_name: api
    image: bsmyers/api:latest
    environment:
      - NODE_ENV=production
      - HTTP_PORT=5000
      - EXPERIENCE_STALE_TIME=0
      - PLACE_STALE_TIME=0
      - METRICS_MAX_AGE=259200000
      - METRIC_CLEANUP_CRON=0 0 * * *
      - SESSION_SECRET={SESSION_SECRET}
      - JWT_API_KEY_SECRET={JWT_API_KEY_SECRET}
    ports:
      - 5000:5000
    volumes:
      - type: bind
        source: ./packages/api/database.db
        target: /app/packages/api/database.db
      - type: bind
        source: ./packages/api/database.db-wal
        target: /app/packages/api/database.db-wal
    restart: always
    networks:
      - proxy_network

  ui:
    container_name: ui
    image: bsmyers/ui:latest
    environment:
      - NODE_ENV=production
    ports:
      - 3000:3000
    depends_on:
      - api
    restart: always
    networks:
      - proxy_network

# Allows containers to talk to each other
networks:
  proxy_network:
    driver: bridge
